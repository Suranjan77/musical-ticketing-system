/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.musical.ticketing.view.components.calendar;

import java.time.LocalDate;
import org.musical.ticketing.view.models.CellData;
import java.time.YearMonth;
import java.util.List;
import org.musical.ticketing.domain.ShowTime;
import org.musical.ticketing.repositories.ShowTimesRepository;
import org.musical.ticketing.view.messaging.EventListener;
import org.musical.ticketing.view.messaging.ListenerRegistry;
import org.musical.ticketing.view.messaging.events.CalendarCellClicked;
import org.musical.ticketing.view.messaging.events.CurrentYearMonthChanged;
import org.musical.ticketing.view.messaging.events.TimeSlotSelected;

/**
 *
 * @author suranjanpoudel
 */
public class CalendarView extends javax.swing.JPanel implements EventListener {

    private final Long musicalId;
    private final Long customerId;

    private final ShowTimesRepository showTimesRepository;

    /**
     * Creates new form CalendarView
     *
     * @param musicalId
     */
    public CalendarView(Long musicalId, Long customerId) {
        register();
        initComponents();
        this.musicalId = musicalId;
        this.customerId = customerId;
        this.showTimesRepository = new ShowTimesRepository();

        calendarPane.drawCalendar(musicalId, customerId, YearMonth.now());
        calendarControlsPanel.initControls(YearMonth.now());
        
        List<ShowTime> showTimes = showTimesRepository.findByMusicalIdForDate(musicalId, LocalDate.now());
        ticketTimeSlotPlane.renderShowTimes(showTimes, LocalDate.now());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        calendarControlsPanel = new org.musical.ticketing.view.components.calendar.CalendarControlsPanel();
        calendarPane = new org.musical.ticketing.view.components.calendar.CalendarPanel();
        ticketTimeSlotPlane = new org.musical.ticketing.view.components.calendar.TicketTimeSlotPlane();
        accountingPane = new org.musical.ticketing.view.components.calendar.AccountingPane();

        setMinimumSize(new java.awt.Dimension(2, 2));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.01;
        add(calendarControlsPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 15);
        add(calendarPane, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.001;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 15);
        add(ticketTimeSlotPlane, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.2;
        add(accountingPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.musical.ticketing.view.components.calendar.AccountingPane accountingPane;
    private org.musical.ticketing.view.components.calendar.CalendarControlsPanel calendarControlsPanel;
    private org.musical.ticketing.view.components.calendar.CalendarPanel calendarPane;
    private org.musical.ticketing.view.components.calendar.TicketTimeSlotPlane ticketTimeSlotPlane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void handleEvent(Object event) {
        if (event instanceof CalendarCellClicked calendarCellClicked) {
            CellData data = calendarCellClicked.data();
            List<ShowTime> showTimes = showTimesRepository.findByMusicalIdForDate(data.musicalId(), data.date());
            ticketTimeSlotPlane.renderShowTimes(showTimes, data.date());
        } else if (event instanceof TimeSlotSelected timeSlotSelected) {
            var showTime = timeSlotSelected.showTime();
            accountingPane.setSelectedTimeSlot(showTime, customerId);
        } else if(event instanceof CurrentYearMonthChanged currentYearMonthChanged) {
            calendarPane.drawCalendar(musicalId, customerId, currentYearMonthChanged.ym());
        }
    }

    @Override
    public void register() {
        ListenerRegistry.register(CalendarCellClicked.class, this);
        ListenerRegistry.register(TimeSlotSelected.class, this);
        ListenerRegistry.register(CurrentYearMonthChanged.class, this);
    }
}
