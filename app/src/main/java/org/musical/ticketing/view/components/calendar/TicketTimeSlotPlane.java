/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.musical.ticketing.view.components.calendar;

import java.awt.event.ItemEvent;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author suranjanpoudel
 */
public class TicketTimeSlotPlane extends javax.swing.JPanel {

    /**
     * Creates new form TicketTimeSlotPlane
     */
    public TicketTimeSlotPlane() {
        initComponents();

        List<TimeSlotData> timeSlots = new ArrayList<>();
        timeSlots.add(new TimeSlotData(0, LocalTime.now(), LocalTime.now().plusHours(1)));
        timeSlots.add(new TimeSlotData(1, LocalTime.now().plusHours(2), LocalTime.now().plusHours(3)));
        timeSlots.add(new TimeSlotData(2, LocalTime.now().plusHours(4), LocalTime.now().plusHours(5)));
        renderTimeSlots(timeSlots);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseTimeLayout = new javax.swing.JLabel();
        chooseTimeComboBox = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(100, 70));
        setMinimumSize(new java.awt.Dimension(100, 70));
        setPreferredSize(new java.awt.Dimension(100, 70));
        setLayout(new java.awt.GridLayout(1, 2));

        chooseTimeLayout.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        chooseTimeLayout.setText("  Choose a Time");
        add(chooseTimeLayout);

        chooseTimeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(chooseTimeComboBox);
    }// </editor-fold>//GEN-END:initComponents

    public void renderTimeSlots(List<TimeSlotData> timeSlots) {
        chooseTimeComboBox.removeAllItems();
        timeSlots.forEach(slot -> chooseTimeComboBox.addItem(slot.formattedText()));
        chooseTimeComboBox.addItemListener(this::timeSlotSelected);
    }
    
    private void timeSlotSelected(ItemEvent event) {
        var selectedItem = event.getItem();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> chooseTimeComboBox;
    private javax.swing.JLabel chooseTimeLayout;
    // End of variables declaration//GEN-END:variables
}
